name: Apple Release

on:
  push:
    branches:
      - iosPipeline

jobs:
  build-and-deploy-ios:
    runs-on: macos-latest
    permissions:
      contents: write
      
    steps:
      - name: Set up git and fetch all history for all branches and tags
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # Change to 0 if you need full history

      
      - name: webfactory/ssh-agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{secrets.SSH_PRIVATE_KEY }}

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3.3"
          bundler-cache: true  # Enable bundler cache
      
      - name: Install OpenSSL
        run: brew install openssl

      - name: Bundle install for iOS Gemfile
        timeout-minutes: 5
        run: |
          cd ios
          bundle install
      
      - name: Set MATCH_PASSWORD
        run: echo "MATCH_PASSWORD=${{ secrets.MATCH_PASSWORD }}" >> $GITHUB_ENV

      - name: Set App Store Connect Credentials
        run: |
          echo "FASTLANE_USER=${{ secrets.APPSTORE_USER }}" >> $GITHUB_ENV
          echo "FASTLANE_PASSWORD=${{ secrets.APPSTORE_PASSWORD }}" >> $GITHUB_ENV
  
    
      - name: Set up fastlane
        run: |
          cd ios
          bundle exec fastlane match --readonly
      
      - name: Update json gem
        run: |
          cd ios
          gem install json -v 2.7.2
          bundle update json
      
      - name: Set up Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: "3.3.0"

      - name: Set up Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.19.2"
          channel: "stable"
          cache: true

      - name: Set up melos
        run: flutter pub global activate melos

      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            .melos_tool
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}

      - name: Melos Bootstrap      
        run: melos bs
      
      - name: Pass .env values to file
        run: |
          cd ios/fastlane
          echo "$API_CONFIG_VARIABLES" >> .env.default

        shell: bash
        env:
          API_CONFIG_VARIABLES: ${{secrets.ENV}}
          CI: false

      # - name: Set up SSH for Git
      #   run: |
      #       mkdir -p ~/.ssh
      #       echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
      #       chmod 600 ~/.ssh/id_rsa
      #       ssh-keyscan github.com >> ~/.ssh/known_hosts
      #       eval "$(ssh-agent -s)"
      #       ssh-add ~/.ssh/id_rsa
      
      - name: Decode and Install Provisioning Profile
        env:
          IOS_PROVISIONING_PROFILE: ${{ secrets.IOS_PROVISIONING_PROFILE }}
        run: |
            mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
            echo $IOS_PROVISIONING_PROFILE | base64 --decode > /Users/runner/Library/MobileDevice/Provisioning\ Profiles/$(uuidgen).mobileprovision
  
      - name: List Installed Provisioning Profiles
        run: ls /Users/runner/Library/MobileDevice/Provisioning\ Profiles/

      - name: Find Code Signing Identities
        run: security find-identity -v -p codesigning
         
      - name: Build and Deploy to TestFlight
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.GIT_PAT_TOKEN }}
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
          ASC_KEY_P8: ${{ secrets.ASC_KEY_P8 }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          APP_IDENTIFIER: ${{secrets.APP_IDENTIER}}
          FASTLANE_MATCH_GIT_PASSWORD: ${{secrets.TOKEN_GITHUB}}
          DISTRIBUTION_P12_FILE: ${{ secrets.DISTRIBUTION_P12_FILE }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          MATCH_KEYCHAIN_PASSWORD: ${{ secrets.MATCH_KEYCHAIN_PASSWORD }}
          FASTLANE_MATCH_GIT_URL: ${{ secrets.FASTLANE_MATCH_GIT_URL }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          ITC_TEAM_ID: ${{ secrets.ITC_TEAM_ID }}
        run: |
          cd ios
          bundle exec fastlane release_beta